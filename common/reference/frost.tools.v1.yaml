openapi: 3.0.0
info:
  title: frost.tools.spec
  version: '1.0'
  contact:
    name: Sabrina Frost
    url: 'https://sabrinafrost.com'
    email: api@sabrinafrost.com
  description: ''
  x-logo:
      url: "./common/images/logo.png"
servers:
  - url: 'https://frost.tools'
    description: Production
  - url: 'http://localhost:8000'
    description: Development
x-tagGroups:
  - name: Tesla
    tags:
      - Authentication
      - Commands
  - name: Utilities
    tags:
      - Encryption
      - Other
paths:
  /tesla/auth:
    delete:
      summary: Revoke access token
      tags: ["Authentication"]
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      operationId: teslaAuthDelete
      description: Revoke access token
      parameters:
        - schema:
            type: string
            minLength: 1
          in: header
          name: data
          description: Encrypted Tesla data
          required: true
        - schema:
            type: string
          in: header
          name: encryption_key
          description: Encryption key (for encrypting / decrypting Tesla authentication data)
          required: true
    post:
      summary: Get access token and vehicle data
      tags: ["Authentication"]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
              examples:
                example-1:
                  value:
                    - "Elon's Roadster": U2FsdGVkX1+8I+5aymBUz35elwql5GgekUsTemUJBAxEa9wfS+7KqVGYqGrrBg2Zuq6nSz4toPAb9W8YK3IrQeGZdvtF9ADMX9Wh4MA]JdaQEETjk8nWWHqJKuazJJHdmYtnMFUhdaJIzUbIpu+n7hrlX/hDXqL/YAt2QeYMpFk=
                    - "Jeff Bezo's Rust Bucket": U2FsdGVkX19NNxagPDVi/ERTis4CVdicXbgK0fVMwoUOlYKTZmJBVl0wTFa66Mxcm2oYrHI6d1PZQU0Yt65zaF3N1WX+pmgtSIc/rW7YSZEEXKyBwKf0g+g4D9juKX1TRVvh6sQjSqVgppy+6Llz/IVBjx+P27YhXnA9NdoJ12k=
        '204':
          description: No Content
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
                  statusCode:
                    type: number
              examples:
                example-1:
                  value:
                    message: No vehicles found in this account
                    error: No Content
                    statusCode: 204
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example-1:
                  value:
                    message: body should have required property 'key'
                    error: Bad Request
                    statusCode: 400
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example-1:
                  value:
                    message: Failed to authenticate with Tesla
                    error: Unauthorized
                    statusCode: 401
      operationId: teslaAuthNew
      description: Get new access token and vehicle data
      parameters:
        - schema:
            type: string
            minLength: 1
          in: header
          name: tesla_email
          description: Tesla account email address
          required: true
        - schema:
            type: string
          in: header
          name: tesla_password
          description: Tesla account password
          required: true
        - schema:
            type: string
          in: header
          name: encryption_key
          description: Encryption key (for encrypting / decrypting Tesla authentication data)
          required: true
    put:
      summary: Refresh access token
      tags: ["Authentication"]
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      operationId: teslaAuthRefresh
      description: Refresh access token
      parameters:
        - schema:
            type: string
            minLength: 1
          in: header
          name: data
          description: Encrypted Tesla data
          required: true
        - schema:
            type: string
          in: header
          name: encryption_key
          description: Encryption key (for encrypting / decrypting Tesla authentication data)
          required: true
  /week:
    get:
      summary: Get week number
      tags: ["Other"]
      responses:
        '200':
          description: OK
          headers: {}
      operationId: week
    parameters: []
  /encrypt:
    post:
      summary: Encrypt data
      tags: ["Encryption"]
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      operationId: encrypt
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                key:
                  type: string
                  format: password
              required:
                - data
                - key
        description: ''
  /decrypt:
    post:
      summary: Decrypt data
      tags: ["Encryption"]
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      operationId: decrypt
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                key:
                  type: string
                  format: password
              required:
                - data
                - key
        description: ''
components:
  schemas:
    Error:
      title: Error
      type: object
      properties:
        message:
          type: string
        error:
          type: string
        statusCode:
          type: number
  securitySchemes: {}
